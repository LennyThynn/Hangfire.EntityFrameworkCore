//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.EntityFrameworkCore.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CoreStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CoreStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Hangfire.EntityFrameworkCore.Properties.CoreStrings", typeof(CoreStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection cannot be empty..
        /// </summary>
        internal static string ArgumentExceptionCollectionCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentExceptionCollectionCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String cannot be empty..
        /// </summary>
        internal static string ArgumentExceptionStringCannotBeEmpty {
            get {
                return ResourceManager.GetString("ArgumentExceptionStringCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-negative value required..
        /// </summary>
        internal static string ArgumentOutOfRangeExceptionNeedNonNegativeValue {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeExceptionNeedNonNegativeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Positive value required..
        /// </summary>
        internal static string ArgumentOutOfRangeExceptionNeedPositiveValue {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeExceptionNeedPositiveValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Records from the &apos;{0}&apos; table aggregated..
        /// </summary>
        internal static string CountersAggregatorExecuteCompleted {
            get {
                return ResourceManager.GetString("CountersAggregatorExecuteCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aggregating records in &apos;{0}&apos; table....
        /// </summary>
        internal static string CountersAggregatorExecuteStarting {
            get {
                return ResourceManager.GetString("CountersAggregatorExecuteStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep-alive query for message {0} sent.
        /// </summary>
        internal static string EFCoreFetchedJobExecuteKeepAliveQueryCompleted {
            get {
                return ResourceManager.GetString("EFCoreFetchedJobExecuteKeepAliveQueryCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to execute keep-alive query for message {0}.
        /// </summary>
        internal static string EFCoreFetchedJobExecuteKeepAliveQueryFailed {
            get {
                return ResourceManager.GetString("EFCoreFetchedJobExecuteKeepAliveQueryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outdated records removed from the &apos;{0}&apos; table..
        /// </summary>
        internal static string ExpirationManagerRemoveExpiredCompleted {
            get {
                return ResourceManager.GetString("ExpirationManagerRemoveExpiredCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing outdated records from the &apos;{0}&apos; table....
        /// </summary>
        internal static string ExpirationManagerRemoveExpiredStarting {
            get {
                return ResourceManager.GetString("ExpirationManagerRemoveExpiredStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown during acquiring distributed lock on the {0} resource within {1} seconds. Outdated records were not removed.
        ///It will be retried in {2} seconds..
        /// </summary>
        internal static string ExpirationManagerUseLockFailed {
            get {
                return ResourceManager.GetString("ExpirationManagerUseLockFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The job does not exist..
        /// </summary>
        internal static string InvalidOperationExceptionJobDoesNotExists {
            get {
                return ResourceManager.GetString("InvalidOperationExceptionJobDoesNotExists", resourceCulture);
            }
        }
    }
}
